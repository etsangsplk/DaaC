apiVersion: v1
kind: ServiceAccount
metadata:
  name: guacrobot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin-guacrobot
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: guacrobot
---
apiVersion: "v1"
kind: "ImageStream"
metadata:
  name: "guac"
spec:
  dockerImageRepository: quay.io/rarm_sa/guac
---
apiVersion: "v1"
kind: "ImageStream"
metadata:
  name: "guacd"
spec:
  dockerImageRepository: quay.io/rarm_sa/guacd
---
apiVersion: "v1"
kind: "ImageStream"
metadata:
  name: "gdesk"
spec:
  dockerImageRepository: quay.io/rarm_sa/gdesk
---
apiVersion: "v1"
kind: "ImageStream"
metadata:
  name: "daac-api"
---
apiVersion: v1
kind: Service
metadata:
  name: guacd
spec:
  ports:
  - port: 4822
    protocol: TCP
    targetPort: 4822
  selector:
    name: guacd
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    name: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: guac
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: guac
---
apiVersion: v1
kind: Service
metadata:
  name: daac-api
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: daac-api
---
apiVersion: v1
kind: Route
metadata:
  name: guac
spec:
  tls:
    termination: edge
  to:
    kind: Service
    name: guac
    weight: 100
  wildcardPolicy: None
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  name: postgres
stringData:
  database-name: ${POSTGRES_DATABASE}
  database-password: ${POSTGRES_PASSWORD}
  database-user: ${POSTGRES_USER}
---
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Guacamole Daemon
    name: guacd
  spec:
    replicas: 1
    selector:
      name: guacd
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: guacd
        name: guacd
      spec:
        containers:
        - name: guacd
          image: guacd:latest
          imagePullPolicy: Always    
          ports:
          - name: guacd-port
            containerPort: 4822
          readinessProbe:
            tcpSocket:
              port: guacd-port
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: guacd-port
            initialDelaySeconds: 15
            periodSeconds: 20
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - guacd
        from:
          kind: ImageStreamTag
          name: guacd:latest
      type: ImageChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: postgres
  spec:
    replicas: 1
    selector:
      name: postgres
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: postgres
      spec:
        containers:
        - capabilities: {}
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgres
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgres
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgres
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgres-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - emptyDir:
            medium: ""
          name: postgres-data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Guacamole Client
    name: guac
  spec:
    replicas: 1
    selector:
      name: guac
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: guac
        name: guac
      spec:
        containers:
        - name: guac
          image: guac:latest
          imagePullPolicy: Always    
          ports:
          - name: guac-port
            containerPort: 8080
          env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgres
          - name: POSTGRES_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgres
          - name: GUACD_HOSTNAME
            value: guacd
          - name: GUACD_PORT
            value: '4822'
          - name: POSTGRES_HOSTNAME
            value: postgres
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          volumeMounts:
            - name: guac-config
              mountPath: /guac
          readinessProbe:
            tcpSocket:
              port: guac-port
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: guac-port
            initialDelaySeconds: 15
            periodSeconds: 20
        volumes:
        - name: guac-config
          configMap:
            name: guac-configmap
            items:
              - key: guacamole.properties
                path: guacamole.properties
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - guac
        from:
          kind: ImageStreamTag
          name: guac:latest
      type: ImageChange

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: daac-api
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: "true"
  labels:
      app: daac-api
  name: daac-api
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'daac-api:latest'    
    source:
      git:
        uri: https://github.com/snowjet/daac-broker.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.6
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - type: ConfigChange
    - imageChange:
      type: ImageChange

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: daac-api
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
  name: daac-api
  labels:
      app: daac-api
  spec:
    replicas: 1
    selector:
      name: daac-api
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: daac-api
        name: daac-api
      spec:
        containers:
        - name: daac-api
          image: daac-api:latest
          imagePullPolicy: Always    
          ports:
          - name: daac-api-port
            containerPort: 8080
          env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgres
          - name: POSTGRES_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgres
          - name: LOG_LEVEL
            value: INFO  
          - name: APP_HOME
            value: app              
          readinessProbe:
            tcpSocket:
              port: daac-api-port
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: daac-api-port
            initialDelaySeconds: 15
            periodSeconds: 20
        serviceAccount: guacrobot
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - daac-api
        from:
          kind: ImageStreamTag
          name: daac-api:latest
      type: ImageChange

- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: guac-configmap
  data:
    guacamole.properties: |-
      # Guac
      guacd-hostname: guacd
      guacd-port: 4822
      # OpenID
      openid-authorization-endpoint: ${oauth_endpoint}
      openid-jwks-endpoint: ${oauth_jwks_endpoint}
      openid-issuer: ${oauth_issuer}
      openid-client-id: ${oauth_client_id}
      openid-redirect-uri: ${oauth_redirect_uri}
      openid-username-claim-type: ${openid_username_claim_type}
      openid-max-token-validity: 700
      # Postgres
      postgresql-hostname: postgres
      postgresql-port: 5432
      postgresql-database: ${POSTGRES_DATABASE}
      postgresql-username: ${POSTGRES_USER}
      postgresql-password: ${POSTGRES_PASSWORD}

parameters:
- description: POSTGRES username
  name: POSTGRES_USER
  value: guac
  required: true
- description: POSTGRES password
  name: POSTGRES_PASSWORD
  value: guac_pass
  required: true
- description: POSTGRES database name
  name: POSTGRES_DATABASE
  value: guacamole_db
  required: true
- description: Guacadmin Password
  name: GUACADMIN_PASSWORD
  value: guacadmin
  required: true
- description: openid-authorization-endpoint
  name: oauth_endpoint
  required: true
- description: openid-jwks-endpoint
  name: oauth_jwks_endpoint
  required: true
- description: openid-issuer
  name: oauth_issuer
  required: true
- description: openid-client-id
  name: oauth_client_id
  required: true
- description: openid-redirect-uri
  name: oauth_redirect_uri
  required: true
- description: openid-username-claim-type
  name: openid_username_claim_type
  value: email
  required: true
- description: Log Level
  name: LOG_LEVEL
  value: INFO
  required: true
